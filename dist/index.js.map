{"version":3,"file":"index.js","sources":["../src/components/round.ts","../src/hooks/useMedia.tsx","../src/components/seed.ts","../src/utils/renders.tsx","../src/brackets/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { IMobileProps } from '../types/Seed';\n\nexport const Bracket = styled.div<IMobileProps>` \n  display: flex;\n  flex-direction: row;\n  @media (max-width: ${props => props.mobileBreakpoint}px) {\n    flex-direction: column;\n  }\n  `\n;\n\nexport const Round = styled.div<IMobileProps>`\n  flex: 0;\n  display:flex;\n  flex-direction:column;\n  @media (max-width: ${props => props.mobileBreakpoint}px) {\n    min-width:0;\n  }\n  `\n;\n\nexport const RoundTitle = styled.div`\n  color: #8f8f8f;\n  font-weight: 400;\n  text-align: center;\n`;\n\nexport const SeedsList = styled.div`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  flex-flow: row wrap;\n  justify-content: center;\n  height: 100%;\n  list-style: none;\n`;\n","import { useState, useEffect } from 'react';\n\nexport default function useMedia(breakPoint: number) {\n  // checking window object to support server side rendering.\n  const [isSmaller, setIsSmaller] = useState(typeof window !== 'undefined' ? window.innerWidth <= breakPoint : false);\n\n  useEffect(() => {\n    function screenResized() {\n      // To make sure that the state is only being updated when it has to be\n      if (isSmaller && window.innerWidth > breakPoint) {\n        setIsSmaller(false);\n      } else if (!isSmaller && window.innerWidth <= breakPoint) {\n        setIsSmaller(true);\n      }\n    }\n    if (typeof window !== 'undefined') window.addEventListener('resize', screenResized);\n\n    // to remove the event listener when this component is unmounted.\n    return () => {\n      if (typeof window !== 'undefined') window.removeEventListener('resize', screenResized);\n    };\n  }, [isSmaller]);\n\n  // the return value should be true or false\n  return isSmaller;\n}\n","import styled from 'styled-components';\nimport { IMobileProps } from '../types/Seed';\n\nexport const SeedItem = styled.div`\n  color: #fff;\n  width: 100%;\n  background-color: #1a1d2e;\n  padding: 0;\n  border-radius: 0.2em;\n  box-shadow: 0 2px 4px -2px #111630;\n  text-align: center;\n  position: relative;\n`;\n\nexport const SeedTeam = styled.div`\n  padding: 0.3rem 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 0.2em;\n  align-items: center;\n`;\n\nexport const SeedTime = styled.div<IMobileProps>(\n  (props) => `\nmargin-top: 2px;\nfont-size: 12px;\ncolor: #8f8f8f;\nheight: 0;\n@media (max-width: ${props.mobileBreakpoint}px) {\n  height:auto;\n}\n`\n);\n\n/*\n * Difference between \"SingleLineSeed\" and \"Seed\" is that single line seed\n * will directly connect to the next node, it's good for double elimination losing brackets.\n *\n * The best behavior in such case is, to check if the next round seeds matches the current round seeds\n */\n\nexport const SingleLineSeed = styled.div<IMobileProps>(\n  (props) => `\npadding: 1em 1.5em;\nmin-width: 225px;\nwidth:100%;\nposition: relative;\ndisplay: flex;\nalign-items: center;\nflex: 0 1 auto;\nflex-direction: column;\njustify-content: center;\nfont-size: 14px;\n@media (max-width: ${props.mobileBreakpoint}px) {\n  width:100%;\n}\n@media (min-width: ${(props.mobileBreakpoint || 0) + 1}px) {\n  &::after {\n      content: \"\";\n      position: absolute;\n      height: 50%;\n      width: 3em;\n    [dir=\"rtl\"] & {\n      left: -1.5em;\n    }\n    [dir=\"ltr\"] & {\n      right: -1.5em;\n    }\n  }\n  &:nth-child(even)::after {\n    border-bottom: 1px solid #707070;\n    top: -0.5px;\n  }\n  &:nth-child(odd)::after {\n    border-top: 1px solid #707070;\n    top: calc(50% - 0.5px);\n  }\n}\n`\n);\n\nexport const Seed = styled.div<IMobileProps>(\n  (props) => `\n  padding: 1em 1.5em;\n  min-width: 225px;\n  width:100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex: 0 1 auto;\n  flex-direction: column;\n  justify-content: center;\n  font-size: 14px;\n  @media (max-width: ${props.mobileBreakpoint}px) {\n    width:100%;\n  }\n  @media (min-width: ${(props.mobileBreakpoint || 0) + 1}px) {\n    &::after {\n        content: \"\";\n        position: absolute;\n        height: 50%;\n        width: 1.5em;\n      [dir=\"rtl\"] & {\n        left: 0px;\n      }\n      [dir=\"ltr\"] & {\n        right: 0px;\n      }\n    }\n\n    &:nth-child(even)::before{\n      content:'';\n      border-top: 1px solid #707070;\n      position:absolute;\n      top: -0.5px;\n      width:1.5em;\n      [dir=\"rtl\"] & {\n        left:-1.5em;\n        }\n      [dir=\"ltr\"] & {\n        right:-1.5em;\n      }\n    }\n\n    &:nth-child(even)::after {\n      border-bottom: 1px solid #707070;\n      top: -0.5px;\n     [dir=\"rtl\"] & {\n        border-left: 1px solid #707070;\n        }\n      [dir=\"ltr\"] & {\n        border-right: 1px solid #707070;\n      }\n    }\n    &:nth-child(odd):not(:last-child)::after {\n      border-top: 1px solid #707070;\n      top: calc(50% - 0.5px);\n      [dir=\"rtl\"] & {\n        border-left: 1px solid #707070;\n        }\n      [dir=\"ltr\"] & {\n        border-right: 1px solid #707070;\n      }\n    }\n}\n`\n);\n","import React from 'react';\nimport { Seed, SeedItem, SeedTeam, SeedTime } from '../components/seed';\nimport { RoundTitle } from '../components/round';\nimport { IRenderSeedProps } from '../types/Seed';\n\n/* ------------------------- default title component ------------------------ */\nexport const renderTitle = (title: string | JSX.Element) => <RoundTitle>{title}</RoundTitle>;\n\n/* ------------------------- default seed component ------------------------- */\nexport const renderSeed = ({ seed, breakpoint }: IRenderSeedProps) => {\n  return (\n    <Seed mobileBreakpoint={breakpoint}>\n      <SeedItem>\n        <div>\n          <SeedTeam>{seed.teams?.[0]?.name || '-----------'}</SeedTeam>\n          <SeedTeam>{seed.teams?.[1]?.name || '-----------'}</SeedTeam>\n        </div>\n      </SeedItem>\n      <SeedTime mobileBreakpoint={breakpoint}>{seed?.date}</SeedTime>\n    </Seed>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { Round, Bracket, SeedsList } from \"../components/round\";\nimport useMedia from \"../hooks/useMedia\";\nimport { renderSeed, renderTitle } from \"../utils/renders\";\nimport { ISingleEliminationProps } from \"../types/SingleElimination\";\n\nconst SingleElimination = ({\n  rounds,\n  rtl = false,\n  roundClassName,\n  bracketClassName,\n  mobileBreakpoint = 992,\n  renderSeedComponent = renderSeed,\n  roundTitleComponent = renderTitle,\n}: ISingleEliminationProps) => {\n  // Checking responsive size\n  const isResponsive = useMedia(mobileBreakpoint);\n\n  const data = rounds.map((round, roundIdx) => (\n    <Round\n      key={round.title}\n      className={roundClassName}\n      mobileBreakpoint={mobileBreakpoint}\n    >\n      {round.title && roundTitleComponent(round.title, roundIdx)}\n      <SeedsList>\n        {round.seeds.map((seed, idx) => {\n          return (\n            <Fragment key={seed.id}>\n              {renderSeedComponent({\n                seed,\n                breakpoint: mobileBreakpoint,\n                roundIndex: roundIdx,\n                seedIndex: idx,\n                rounds,\n              })}\n            </Fragment>\n          );\n        })}\n      </SeedsList>\n    </Round>\n  ));\n\n  if (isResponsive) {\n    return (\n      <Bracket\n        className={bracketClassName}\n        dir={rtl ? \"rtl\" : \"ltr\"}\n        mobileBreakpoint={mobileBreakpoint}\n      >\n        {data}\n      </Bracket>\n    );\n  }\n  return (\n    <Bracket\n      className={bracketClassName}\n      dir={rtl ? \"rtl\" : \"ltr\"}\n      mobileBreakpoint={mobileBreakpoint}\n    >\n      {data}\n    </Bracket>\n  );\n};\n\nexport { SingleElimination };\n"],"names":["Bracket","styled","div","_templateObject","_taggedTemplateLiteralLoose","props","mobileBreakpoint","Round","_templateObject2","RoundTitle","_templateObject3","SeedsList","_templateObject4","useMedia","breakPoint","_useState","useState","window","innerWidth","isSmaller","setIsSmaller","useEffect","screenResized","addEventListener","removeEventListener","SeedItem","SeedTeam","SeedTime","SingleLineSeed","Seed","renderTitle","title","React","renderSeed","_ref","seed","breakpoint","_seed$teams","teams","_seed$teams$","name","_seed$teams2","_seed$teams2$","date","SingleElimination","rounds","_ref$rtl","rtl","roundClassName","bracketClassName","_ref$mobileBreakpoint","_ref$renderSeedCompon","renderSeedComponent","_ref$roundTitleCompon","roundTitleComponent","isResponsive","data","map","round","roundIdx","key","className","seeds","idx","Fragment","id","roundIndex","seedIndex","dir"],"mappings":"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"}